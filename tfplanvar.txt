module.afw-static-firewall-health.data.azurerm_resources.AssetsData: Reading...
module.sa-static-availability.data.azurerm_resources.AssetsData: Reading...
module.pip-static-ddos-attack.data.azurerm_resources.AssetsData: Reading...
module.afw-static-firewall-health.data.azurerm_resources.AssetsData: Read complete after 0s [id=resource-949f2f1b-643a-424e-a4b9-1a0fac45aca5]
module.sa-static-availability.data.azurerm_resources.AssetsData: Read complete after 0s [id=resource-c21f03c0-6a5a-4cf0-8201-66941e9dcc1b]
data.azurerm_subscription.current: Reading...
module.vm-custom-subscription-os-disk-read-latency-alert.data.azurerm_resources.AssetsData: Reading...
module.pip-static-ddos-attack.data.azurerm_resources.AssetsData: Read complete after 0s [id=resource-06994fa4-653d-4954-898e-ca930a5f7dca]
module.vnet-static-ddos-attack.data.azurerm_resources.AssetsData: Reading...
data.azurerm_subscription.current: Read complete after 0s [id=/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4]
module.vm-custom-subscription-os-disk-read-latency-alert.data.azurerm_resources.AssetsData: Read complete after 0s [id=resource-4914fafd-c11f-4686-a60b-4aa5ef970336]
module.pip-static-packets-in-ddos.data.azurerm_resources.AssetsData: Reading...
module.vnet-static-ddos-attack.data.azurerm_resources.AssetsData: Read complete after 0s [id=resource-90337392-3895-4d5a-ae73-c18398bf3b36]
module.pip-static-packets-in-ddos.data.azurerm_resources.AssetsData: Read complete after 1s [id=resource-e8367490-1f68-42b2-b823-92d8772f3365]
module.pip-static-bytes-in-ddos-attack.data.azurerm_resources.AssetsData: Reading...
module.pip-static-bytes-in-ddos-attack.data.azurerm_resources.AssetsData: Read complete after 0s [id=resource-c45b8a28-80f3-4881-be6b-8f67332b9276]
module.afw-static-snat-port-utilization.data.azurerm_resources.AssetsData: Reading...
module.afw-static-snat-port-utilization.data.azurerm_resources.AssetsData: Read complete after 1s [id=resource-94e9d0fc-567d-4c03-91be-0175ed0c0a08]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_firewall.firewall will be created
  + resource "azurerm_firewall" "firewall" {
      + dns_proxy_enabled   = (known after apply)
      + firewall_policy_id  = (known after apply)
      + id                  = (known after apply)
      + location            = "uksouth"
      + name                = "fw-gbl-test-firewall"
      + resource_group_name = "rg-uks-security"
      + sku_name            = "AZFW_VNet"
      + sku_tier            = "Standard"
      + threat_intel_mode   = "Alert"

      + ip_configuration {
          + name                 = "configuration"
          + private_ip_address   = (known after apply)
          + public_ip_address_id = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # azurerm_firewall_policy.firewall_policy will be created
  + resource "azurerm_firewall_policy" "firewall_policy" {
      + child_policies           = (known after apply)
      + firewalls                = (known after apply)
      + id                       = (known after apply)
      + location                 = "uksouth"
      + name                     = "fw-gbl-test-firewallpolicy"
      + resource_group_name      = "rg-uks-security"
      + rule_collection_groups   = (known after apply)
      + sku                      = (known after apply)
      + threat_intelligence_mode = "Alert"
    }

  # azurerm_monitor_action_group.ag_itsm will be created
  + resource "azurerm_monitor_action_group" "ag_itsm" {
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "action-group-itsm-mailbox"
      + resource_group_name = "rg-uks-monitoring"
      + short_name          = "ag-itsm"

      + email_receiver {
          + email_address = "itsm-mailbox@yourdomain.com"
          + name          = "itsm-group"
        }
    }

  # azurerm_monitor_action_group.ag_oncall will be created
  + resource "azurerm_monitor_action_group" "ag_oncall" {
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "action-group-oncall-mailbox"
      + resource_group_name = "rg-uks-monitoring"
      + short_name          = "ag-oncall"

      + email_receiver {
          + email_address = "oncall-mailbox@yourdomain.com"
          + name          = "oncall-group"
        }
    }

  # azurerm_monitor_action_group.ag_proj will be created
  + resource "azurerm_monitor_action_group" "ag_proj" {
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "action-group-project-mailbox"
      + resource_group_name = "rg-uks-monitoring"
      + short_name          = "ag-proj"

      + email_receiver {
          + email_address = "project-mailbox@yourdomain.com"
          + name          = "project-group"
        }
    }

  # azurerm_network_ddos_protection_plan.ddos_std will be created
  + resource "azurerm_network_ddos_protection_plan" "ddos_std" {
      + id                  = (known after apply)
      + location            = "uksouth"
      + name                = "example-protection-plan"
      + resource_group_name = "rg-uks-security"
      + virtual_network_ids = (known after apply)
    }

  # azurerm_network_interface.vm_nic will be created
  + resource "azurerm_network_interface" "vm_nic" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "uksouth"
      + mac_address                    = (known after apply)
      + name                           = "nic-uks-test-virtualmachine_1-1"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "rg-uks-compute"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.nsg1_vm1 will be created
  + resource "azurerm_network_interface_security_group_association" "nsg1_vm1" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.nsg_1 will be created
  + resource "azurerm_network_security_group" "nsg_1" {
      + id                  = (known after apply)
      + location            = "uksouth"
      + name                = "nic-uks-test-virtualmachine_1-1"
      + resource_group_name = "rg-uks-networking"
      + security_rule       = (known after apply)
    }

  # azurerm_public_ip.firewall_pubip will be created
  + resource "azurerm_public_ip" "firewall_pubip" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "uksouth"
      + name                    = "pubip-uks-test-firewall-1"
      + resource_group_name     = "rg-uks-security"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.compute will be created
  + resource "azurerm_resource_group" "compute" {
      + id       = (known after apply)
      + location = "uksouth"
      + name     = "rg-uks-compute"
    }

  # azurerm_resource_group.monitoring will be created
  + resource "azurerm_resource_group" "monitoring" {
      + id       = (known after apply)
      + location = "uksouth"
      + name     = "rg-uks-monitoring"
    }

  # azurerm_resource_group.networking will be created
  + resource "azurerm_resource_group" "networking" {
      + id       = (known after apply)
      + location = "uksouth"
      + name     = "rg-uks-networking"
    }

  # azurerm_resource_group.security will be created
  + resource "azurerm_resource_group" "security" {
      + id       = (known after apply)
      + location = "uksouth"
      + name     = "rg-uks-security"
    }

  # azurerm_resource_group.storage will be created
  + resource "azurerm_resource_group" "storage" {
      + id       = (known after apply)
      + location = "uksouth"
      + name     = "rg-uks-storage"
    }

  # azurerm_storage_account.diagnostics will be created
  + resource "azurerm_storage_account" "diagnostics" {
      + access_tier                        = (known after apply)
      + account_kind                       = "StorageV2"
      + account_replication_type           = "LRS"
      + account_tier                       = "Standard"
      + allow_nested_items_to_be_public    = true
      + cross_tenant_replication_enabled   = true
      + default_to_oauth_authentication    = false
      + dns_endpoint_type                  = "Standard"
      + enable_https_traffic_only          = true
      + id                                 = (known after apply)
      + infrastructure_encryption_enabled  = false
      + is_hns_enabled                     = false
      + large_file_share_enabled           = (known after apply)
      + local_user_enabled                 = true
      + location                           = "uksouth"
      + min_tls_version                    = "TLS1_2"
      + name                               = "saukstestdiag01"
      + nfsv3_enabled                      = false
      + primary_access_key                 = (sensitive value)
      + primary_blob_connection_string     = (sensitive value)
      + primary_blob_endpoint              = (known after apply)
      + primary_blob_host                  = (known after apply)
      + primary_blob_internet_endpoint     = (known after apply)
      + primary_blob_internet_host         = (known after apply)
      + primary_blob_microsoft_endpoint    = (known after apply)
      + primary_blob_microsoft_host        = (known after apply)
      + primary_connection_string          = (sensitive value)
      + primary_dfs_endpoint               = (known after apply)
      + primary_dfs_host                   = (known after apply)
      + primary_dfs_internet_endpoint      = (known after apply)
      + primary_dfs_internet_host          = (known after apply)
      + primary_dfs_microsoft_endpoint     = (known after apply)
      + primary_dfs_microsoft_host         = (known after apply)
      + primary_file_endpoint              = (known after apply)
      + primary_file_host                  = (known after apply)
      + primary_file_internet_endpoint     = (known after apply)
      + primary_file_internet_host         = (known after apply)
      + primary_file_microsoft_endpoint    = (known after apply)
      + primary_file_microsoft_host        = (known after apply)
      + primary_location                   = (known after apply)
      + primary_queue_endpoint             = (known after apply)
      + primary_queue_host                 = (known after apply)
      + primary_queue_microsoft_endpoint   = (known after apply)
      + primary_queue_microsoft_host       = (known after apply)
      + primary_table_endpoint             = (known after apply)
      + primary_table_host                 = (known after apply)
      + primary_table_microsoft_endpoint   = (known after apply)
      + primary_table_microsoft_host       = (known after apply)
      + primary_web_endpoint               = (known after apply)
      + primary_web_host                   = (known after apply)
      + primary_web_internet_endpoint      = (known after apply)
      + primary_web_internet_host          = (known after apply)
      + primary_web_microsoft_endpoint     = (known after apply)
      + primary_web_microsoft_host         = (known after apply)
      + public_network_access_enabled      = true
      + queue_encryption_key_type          = "Service"
      + resource_group_name                = "rg-uks-storage"
      + secondary_access_key               = (sensitive value)
      + secondary_blob_connection_string   = (sensitive value)
      + secondary_blob_endpoint            = (known after apply)
      + secondary_blob_host                = (known after apply)
      + secondary_blob_internet_endpoint   = (known after apply)
      + secondary_blob_internet_host       = (known after apply)
      + secondary_blob_microsoft_endpoint  = (known after apply)
      + secondary_blob_microsoft_host      = (known after apply)
      + secondary_connection_string        = (sensitive value)
      + secondary_dfs_endpoint             = (known after apply)
      + secondary_dfs_host                 = (known after apply)
      + secondary_dfs_internet_endpoint    = (known after apply)
      + secondary_dfs_internet_host        = (known after apply)
      + secondary_dfs_microsoft_endpoint   = (known after apply)
      + secondary_dfs_microsoft_host       = (known after apply)
      + secondary_file_endpoint            = (known after apply)
      + secondary_file_host                = (known after apply)
      + secondary_file_internet_endpoint   = (known after apply)
      + secondary_file_internet_host       = (known after apply)
      + secondary_file_microsoft_endpoint  = (known after apply)
      + secondary_file_microsoft_host      = (known after apply)
      + secondary_location                 = (known after apply)
      + secondary_queue_endpoint           = (known after apply)
      + secondary_queue_host               = (known after apply)
      + secondary_queue_microsoft_endpoint = (known after apply)
      + secondary_queue_microsoft_host     = (known after apply)
      + secondary_table_endpoint           = (known after apply)
      + secondary_table_host               = (known after apply)
      + secondary_table_microsoft_endpoint = (known after apply)
      + secondary_table_microsoft_host     = (known after apply)
      + secondary_web_endpoint             = (known after apply)
      + secondary_web_host                 = (known after apply)
      + secondary_web_internet_endpoint    = (known after apply)
      + secondary_web_internet_host        = (known after apply)
      + secondary_web_microsoft_endpoint   = (known after apply)
      + secondary_web_microsoft_host       = (known after apply)
      + sftp_enabled                       = false
      + shared_access_key_enabled          = true
      + table_encryption_key_type          = "Service"
    }

  # azurerm_subnet.compute will be created
  + resource "azurerm_subnet" "compute" {
      + address_prefixes                               = [
          + "10.0.1.0/28",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "snet-uks-compute"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "rg-uks-networking"
      + virtual_network_name                           = "vnet-uks-main"
    }

  # azurerm_subnet.networking will be created
  + resource "azurerm_subnet" "networking" {
      + address_prefixes                               = [
          + "10.0.3.0/28",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "snet-uks-network"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "rg-uks-networking"
      + virtual_network_name                           = "vnet-uks-main"
    }

  # azurerm_subnet.security will be created
  + resource "azurerm_subnet" "security" {
      + address_prefixes                               = [
          + "10.0.4.0/28",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "snet-uks-security"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "rg-uks-networking"
      + virtual_network_name                           = "vnet-uks-main"
    }

  # azurerm_subnet.storage will be created
  + resource "azurerm_subnet" "storage" {
      + address_prefixes                               = [
          + "10.0.2.0/28",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "snet-uks-storage"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "rg-uks-networking"
      + virtual_network_name                           = "vnet-uks-main"
    }

  # azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space       = [
          + "10.0.0.0/19",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "uksouth"
      + name                = "vnet-uks-main"
      + resource_group_name = "rg-uks-networking"
      + subnet              = (known after apply)

      + ddos_protection_plan {
          + enable = true
          + id     = (known after apply)
        }
    }

  # azurerm_windows_virtual_machine.win_vm_1 will be created
  + resource "azurerm_windows_virtual_machine" "win_vm_1" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disk_controller_type                                   = (known after apply)
      + enable_automatic_updates                               = true
      + extensions_time_budget                                 = "PT1H30M"
      + hotpatching_enabled                                    = true
      + id                                                     = (known after apply)
      + location                                               = "uksouth"
      + max_bid_price                                          = -1
      + name                                                   = "vm-uks-test-virtualmachine_1"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "AutomaticByOS"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "rg-uks-compute"
      + size                                                   = "Standard_B2s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + boot_diagnostics {
          + storage_account_uri = (known after apply)
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "WindowsServer"
          + publisher = "MicrosoftWindowsServer"
          + sku       = "2016-Datacenter"
          + version   = "latest"
        }
    }

  # random_password.resource will be created
  + resource "random_password" "resource" {
      + bcrypt_hash = (sensitive value)
      + id          = (known after apply)
      + length      = 12
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (sensitive value)
      + special     = true
      + upper       = true
    }

  # random_string.numbers will be created
  + resource "random_string" "numbers" {
      + id          = (known after apply)
      + length      = 4
      + lower       = false
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = false
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.health_advisories will be created
  + resource "azurerm_monitor_activity_log_alert" "health_advisories" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "Health_Advisories"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "ServiceHealth"
          + levels   = [
              + "Informational",
            ]

          + service_health {
              + events    = [
                  + "Informational",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.maintenance will be created
  + resource "azurerm_monitor_activity_log_alert" "maintenance" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "PlannedMaintenanceAlert"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "ServiceHealth"
          + levels   = [
              + "Warning",
              + "Error",
              + "Critical",
            ]

          + service_health {
              + events    = [
                  + "Maintenance",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.security_critical will be created
  + resource "azurerm_monitor_activity_log_alert" "security_critical" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "SecurityAlert-Critical"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "Security"
          + levels   = [
              + "Critical",
            ]

          + service_health {
              + events    = [
                  + "Security",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.security_error will be created
  + resource "azurerm_monitor_activity_log_alert" "security_error" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "SecurityAlert-Error"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "Security"
          + levels   = [
              + "Error",
            ]

          + service_health {
              + events    = [
                  + "Security",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.security_warning will be created
  + resource "azurerm_monitor_activity_log_alert" "security_warning" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "SecurityAlert-Warning"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "Security"
          + levels   = [
              + "Warning",
            ]

          + service_health {
              + events    = [
                  + "Security",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.service_health_critical will be created
  + resource "azurerm_monitor_activity_log_alert" "service_health_critical" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "ServiceHealth-Critical"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "ServiceHealth"
          + levels   = [
              + "Critical",
            ]

          + service_health {
              + events    = [
                  + "Incident",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.service_health_error will be created
  + resource "azurerm_monitor_activity_log_alert" "service_health_error" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "ServiceHealth-Error"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "ServiceHealth"
          + levels   = [
              + "Error",
            ]

          + service_health {
              + events    = [
                  + "Incident",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

  # module.health_advisories.azurerm_monitor_activity_log_alert.service_health_warning will be created
  + resource "azurerm_monitor_activity_log_alert" "service_health_warning" {
      + description         = "Insert your description here"
      + enabled             = true
      + id                  = (known after apply)
      + location            = "global"
      + name                = "ServiceHealth-Warning"
      + resource_group_name = "rg-alerts"
      + scopes              = [
          + "/subscriptions/ec08f54a-0f1a-4c39-a964-cc5f288924e4",
        ]

      + action {
          + action_group_id = (known after apply)
        }

      + criteria {
          + category = "ServiceHealth"
          + levels   = [
              + "Warning",
            ]

          + service_health {
              + events    = [
                  + "Incident",
                ]
              + locations = [
                  + "global",
                  + "uksouth",
                  + "ukwest",
                ]
            }
        }
    }

Plan: 32 to add, 0 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
